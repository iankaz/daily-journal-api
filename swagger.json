{
  "openapi": "3.0.0",
  "info": {
    "title": "Daily Journal API",
    "version": "1.0.0",
    "description": "A RESTful API for managing daily journal entries with OAuth authentication"
  },
  "tags": [
    {
      "name": "Journal",
      "description": "Endpoints for managing journal entries"
    },
    {
      "name": "User",
      "description": "Endpoints for managing user accounts"
    },
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    }
  ],
  "servers": [
    {
      "url": "https://cse341-rlcp.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid"
      }
    },
    "schemas": {
      "Journal": {
        "type": "object",
        "required": ["title", "content", "mood", "weather"],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "description": "Title of the journal entry"
          },
          "content": {
            "type": "string",
            "maxLength": 5000,
            "description": "Content of the journal entry"
          },
          "mood": {
            "type": "string",
            "enum": ["very-happy", "happy", "neutral", "sad", "very-sad", "anxious", "excited", "grateful"],
            "description": "Current mood"
          },
          "weather": {
            "type": "string",
            "enum": ["sunny", "cloudy", "rainy", "snowy", "stormy", "foggy", "windy"],
            "description": "Current weather"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 50
            },
            "description": "Tags for the entry (optional)"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "Whether the entry is private (optional)"
          },
          "location": {
            "type": "string",
            "maxLength": 100,
            "description": "Location (optional)"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "githubId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "avatarUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      }
    }
  },
  "security": [
    {
      "cookieAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API information",
        "security": [],
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "documentation": {
                      "type": "string"
                    },
                    "authentication": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/github": {
      "get": {
        "tags": ["Auth"],
        "summary": "Initiate GitHub OAuth",
        "security": [],
        "responses": {
          "302": {
            "description": "Redirect to GitHub OAuth"
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user information",
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "responses": {
          "200": {
            "description": "Logged out successfully"
          },
          "500": {
            "description": "Logout failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/journals": {
      "get": {
        "tags": ["Journal"],
        "summary": "Get all journals for authenticated user",
        "security": [{ "cookieAuth": [] }],
        "responses": {
          "200": {
            "description": "List of journals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Journal"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Journal"],
        "summary": "Create a new journal entry",
        "security": [{ "cookieAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Journal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Journal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/journals/{id}": {
      "get": {
        "tags": ["Journal"],
        "summary": "Get a specific journal entry",
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Journal entry found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              }
            }
          },
          "404": {
            "description": "Journal not found"
          }
        }
      },
      "put": {
        "tags": ["Journal"],
        "summary": "Update a journal entry",
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Journal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Journal updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journal"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Journal not found"
          }
        }
      },
      "delete": {
        "tags": ["Journal"],
        "summary": "Delete a journal entry",
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Journal deleted successfully"
          },
          "404": {
            "description": "Journal not found"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "security": [{ "cookieAuth": [] }],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get a specific user",
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update a user",
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete a user",
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "tags": ["Auth"],
        "summary": "Handle GitHub OAuth callback",
        "security": [],
        "responses": {
          "200": {
            "description": "GitHub OAuth callback handled successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/auth/token": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get JWT token for authenticated user",
        "security": [{ "cookieAuth": [] }],
        "responses": {
          "200": {
            "description": "JWT token for authenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}
